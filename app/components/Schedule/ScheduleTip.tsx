import styled from 'styled-components'
import PulseButton from '@/components/Help/PulsingButton'
import { AnimatePresence, motion } from 'framer-motion'
import React, { useEffect, useRef, useState } from 'react'
import { useClickAway } from 'react-use'

export const OkButton = styled(PulseButton)`
	background: #5294e5;
	border-color: #5294e5;
	border-radius: 3px;
	padding: 4px;
	flex-shrink: 0;

	max-width: 200px;
	width: 100%;

	.pulse-text {
		color: #fff;
		text-align: center;
		font-size: 18px;
		font-weight: 600;
	}
`

const TipText = styled.div`
	color: #565656;
	text-align: center;

	font-size: 16px;
	font-weight: 300;
	line-height: 120%;
`

const Controls = styled.div`
	display: flex;
	justify-content: center;
	align-items: center;
	margin-top: 24px;
`

const IconContainer = styled.div`
	display: flex;
	justify-content: center;
	align-items: center;
	margin-bottom: 12px;
`

const ScheduleTip = () => {
	const [show, setShow] = useState(false)
	const ref = useRef(null)

	useClickAway(ref, () => {
		handleCloseTip()
	})

	const handleCloseTip = () => {
		setShow(false)
		localStorage.setItem('conference-tip', 'true')
	}

	const handleShowTip = () => {
		try {
			const isTipShown = localStorage.getItem('conference-tip')
			if (isTipShown && isTipShown == 'true') return
			setShow(true)

			localStorage.setItem('conference-tip', 'true')
		} catch (e) {
			console.error('failed to access local storage')
		}
	}

	useEffect(() => {
		handleShowTip()
	}, [])

	return (
		<AnimatePresence key="conference-tip" initial={false}>
			{show && (
				<TipWrapper
					initial={{ translateX: '-50%', scale: 0.8, opacity: 0 }}
					animate={{
						translateX: '-50%',
						scale: 1,
						opacity: 1,
					}}
					exit={{
						translateX: '-50%',
						scale: 0.8,
						opacity: 0,
					}}
					transition={{
						type: 'spring',
						stiffness: 260,
						damping: 20,
						delay: 0.1,
					}}
				>
					<TipContainer ref={ref}>
						<IconContainer>
							<svg
								xmlns="http://www.w3.org/2000/svg"
								width="59"
								height="85"
								viewBox="0 0 59 85"
								fill="none"
								style={{ overflow: 'visible' }}
							>
								<motion.g
									initial={{
										translateY: '0%',
									}}
									animate={{
										translateY: '20%',
									}}
									transition={{
										type: 'spring',
										stiffness: 260,
										damping: 70,
										duration: 6,
										repeat: Infinity,
										repeatType: 'reverse',
									}}
								>
									<path
										d="M26.3086 44.439L26.3068 44.4398L28.8356 50.2072L28.8356 28.6911C28.8356 27.6169 29.1809 26.6191 29.8817 25.8791C30.5872 25.1342 31.5584 24.7522 32.6041 24.7522C34.7416 24.7522 36.3087 26.4538 36.3087 28.6911L36.3087 38.4265C36.3195 38.4167 36.3304 38.407 36.3414 38.3973C36.8851 37.9225 37.5655 37.7869 38.163 37.7869C39.3648 37.7869 40.5557 38.1761 41.4462 39.0826C41.9645 39.6103 42.3325 40.264 42.5495 41.0136C42.6217 40.9247 42.7031 40.8392 42.7947 40.7583C43.3516 40.2665 44.0527 40.1511 44.6378 40.1511C45.9407 40.1511 47.1318 40.6556 47.99 41.5754C48.4274 42.0442 48.7608 42.6015 48.9819 43.2207C49.0288 43.1617 49.0805 43.1043 49.1373 43.0487C49.5919 42.6045 50.1611 42.4939 50.6014 42.4939C52.159 42.4939 53.4941 43.3768 54.3857 44.6891C55.2751 45.998 55.7756 47.7841 55.7756 49.8619L55.7756 53.9512C55.7756 59.1008 54.392 63.3776 51.6626 66.3806C48.9174 69.4009 44.9605 70.9674 40.1651 70.9674C36.5161 70.9674 33.2106 70.1072 30.3586 67.9644C27.5229 65.834 25.2623 62.5308 23.5117 57.8738L26.3086 44.439ZM26.3086 44.439L26.2061 44.2102L26.2027 44.2024C25.7613 43.2167 25.0443 42.4844 24.148 42.1084C23.2583 41.7352 22.2879 41.7544 21.4207 42.0974C19.6156 42.8066 18.6018 44.8972 19.4454 47.1013C19.4454 47.1013 19.4454 47.1014 19.4454 47.1014L19.4462 47.1033L19.4466 47.1045L23.5115 57.8733L23.5116 57.8735L23.5117 57.8737L26.3086 44.439ZM28.3923 53.157L28.3922 53.1571L28.3959 53.1648C28.5296 53.4433 28.6747 53.6695 28.8521 53.8268C29.0379 53.9915 29.251 54.0734 29.4945 54.0734C30.0002 54.0734 30.4261 53.6348 30.4261 52.9715L30.4261 28.6911C30.4261 27.9565 30.6586 27.3718 31.0365 26.9728C31.4135 26.5747 31.9526 26.3427 32.6041 26.3427C33.7725 26.3427 34.7182 27.2386 34.7182 28.6911L34.7182 45.0484C34.7182 45.5137 34.8345 45.8956 35.0576 46.1659C35.2845 46.441 35.6025 46.5763 35.948 46.5763C36.2771 46.5763 36.5878 46.4373 36.8117 46.1659C37.0333 45.8974 37.1564 45.5167 37.1564 45.0484L37.1564 40.2136C37.1564 39.9141 37.2453 39.7196 37.3877 39.5953C37.5359 39.4658 37.7818 39.3774 38.163 39.3774C39.0255 39.3774 39.7763 39.6523 40.3115 40.1971C40.8464 40.7416 41.193 41.5834 41.193 42.7695L41.193 45.0484C41.193 45.5165 41.3161 45.899 41.5454 46.1688C41.7774 46.4417 42.0994 46.5763 42.444 46.5763C42.7742 46.5763 43.0808 46.4363 43.2995 46.163C43.5148 45.8939 43.6312 45.5139 43.6312 45.0484L43.6312 42.5778C43.6312 42.2583 43.7147 42.0677 43.8475 41.9505C43.9869 41.8274 44.2289 41.7416 44.6378 41.7416C45.5193 41.7416 46.2827 42.077 46.8271 42.6605C47.3722 43.2446 47.7103 44.0916 47.7103 45.1336L47.7103 46.3263C47.7103 46.7916 47.8266 47.1735 48.0497 47.4439C48.2766 47.7189 48.5946 47.8542 48.9401 47.8542C49.2692 47.8542 49.5799 47.7152 49.8038 47.4439C50.0254 47.1753 50.1485 46.7946 50.1485 46.3263L50.1485 44.5159C50.1485 44.3338 50.1957 44.2383 50.249 44.1862C50.3032 44.1332 50.4056 44.0844 50.6014 44.0844C51.5113 44.0844 52.3995 44.5958 53.0702 45.5829C53.7414 46.5708 54.1851 48.0256 54.1851 49.8619L54.1851 53.9512C54.1851 58.8283 52.8764 62.6805 50.4856 65.3109C48.0977 67.938 44.6028 69.3769 40.1651 69.3769C36.777 69.3769 33.8303 68.5834 31.314 66.6928C28.7946 64.8 26.6828 61.7898 25.0003 57.3136L25.0001 57.3133L20.9321 46.5362L20.9316 46.535C20.3819 45.1018 21.0517 43.9505 22.0035 43.5773L22.0043 43.5769C22.5121 43.3757 23.0512 43.3731 23.5327 43.5751C24.0129 43.7765 24.454 44.1893 24.7507 44.8516C24.7508 44.8518 24.7509 44.8521 24.7511 44.8524L28.3923 53.157Z"
										fill="white"
										stroke="black"
										strokeWidth="1"
									/>
									<mask id="path123" fill="white">
										<path d="M43.2783 28.9758C43.7395 27.2546 43.7895 25.4491 43.4243 23.7051C43.0591 21.9611 42.2889 20.3274 41.1759 18.9358C40.0629 17.5443 38.6383 16.434 37.0172 15.6946C35.396 14.9551 33.6236 14.6072 31.8432 14.679C30.0628 14.7507 28.3242 15.2401 26.7678 16.1077C25.2114 16.9752 23.8808 18.1965 22.8834 19.6731C21.886 21.1497 21.2498 22.8401 21.0262 24.6078C20.8025 26.3756 20.9976 28.1712 21.5958 29.8496L23.4736 29.1804C22.9803 27.7964 22.8194 26.3157 23.0039 24.8581C23.1883 23.4004 23.7129 22.0065 24.5353 20.7889C25.3578 19.5714 26.455 18.5642 27.7384 17.8489C29.0218 17.1335 30.4554 16.73 31.9235 16.6708C33.3916 16.6116 34.8531 16.8985 36.1899 17.5083C37.5267 18.118 38.7014 19.0336 39.6191 20.181C40.5369 21.3284 41.172 22.6756 41.4731 24.1137C41.7743 25.5518 41.733 27.0406 41.3527 28.4598L43.2783 28.9758Z" />
									</mask>
									<path
										d="M43.2783 28.9758C43.7395 27.2546 43.7895 25.4491 43.4243 23.7051C43.0591 21.9611 42.2889 20.3274 41.1759 18.9358C40.0629 17.5443 38.6383 16.434 37.0172 15.6946C35.396 14.9551 33.6236 14.6072 31.8432 14.679C30.0628 14.7507 28.3242 15.2401 26.7678 16.1077C25.2114 16.9752 23.8808 18.1965 22.8834 19.6731C21.886 21.1497 21.2498 22.8401 21.0262 24.6078C20.8025 26.3756 20.9976 28.1712 21.5958 29.8496L23.4736 29.1804C22.9803 27.7964 22.8194 26.3157 23.0039 24.8581C23.1883 23.4004 23.7129 22.0065 24.5353 20.7889C25.3578 19.5714 26.455 18.5642 27.7384 17.8489C29.0218 17.1335 30.4554 16.73 31.9235 16.6708C33.3916 16.6116 34.8531 16.8985 36.1899 17.5083C37.5267 18.118 38.7014 19.0336 39.6191 20.181C40.5369 21.3284 41.172 22.6756 41.4731 24.1137C41.7743 25.5518 41.733 27.0406 41.3527 28.4598L43.2783 28.9758Z"
										stroke="black"
										strokeWidth="4"
										mask="url(#path123)"
									/>
								</motion.g>
								<path
									d="M3.63951 10.9095L9.05132 5.32861L14.4631 10.9095"
									stroke="black"
									strokeWidth="2"
									strokeLinecap="round"
									strokeLinejoin="round"
								/>
								<path
									d="M9.05202 10.03L9.05211 78.4038"
									stroke="black"
									strokeWidth="2"
									strokeLinecap="round"
									strokeLinejoin="round"
									strokeDasharray="5 5"
								/>
							</svg>
						</IconContainer>
						<TipText>Потяните наверх для просмотра полной программы</TipText>
						<Controls>
							<OkButton button={true} onClick={handleCloseTip}>
								Понятно
							</OkButton>
						</Controls>
					</TipContainer>
				</TipWrapper>
			)}
		</AnimatePresence>
	)
}

const TipContainer = styled.div`
	border-radius: 12px;
	background: #fff;
	max-width: 330px;
	width: 100%;
	margin: 0 auto;
	padding: 20px;
	box-shadow: 0px 6px 7px rgba(0, 0, 0, 0.15);
`

const TipWrapper = styled(motion.div)`
	position: absolute;
	top: 20%;
	left: 50%;
	transform: translateX(-50%);
`

export default ScheduleTip
